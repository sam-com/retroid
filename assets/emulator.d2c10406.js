import{s as u,E as l,r as m}from"./emulatorMessageHandler.2af1efb8.js";async function i(e){return new Promise(t=>{const o=document.getElementById("canvas"),r=document.createElement("script");r.src=`/retroid//cores/${e}_libretro.js`,r.onerror=n=>{alert(n)},r.onload=()=>(console.log("core loaded"),t()),o==null||o.appendChild(r)})}function w(e,t){return new Promise((o,r)=>{fetch(e,{method:"GET"}).then(n=>n.ok?o(n[t]()):r(`getFile -> Unable to fetch file at ${e}`))})}var a=(e=>(e.BUNDLE="home/web_user/retroarch/bundle",e.USERDATA="home/web_user/retroarch/userdata",e.CONFIG="/home/web_user/retroarch/userdata/retroarch.cfg",e.ROM="/rom.bin",e.STATE="/home/web_user/retroarch/userdata/states/rom.state",e.SCREENSHOT="/home/web_user/retroarch/userdata/screenshots/",e))(a||{});async function s(e){const t=`/retroid//roms/${e}`;let o=await w(t,"blob");if(!o)throw new Error(`loadRom ->  Unable to fetch rom at ${e}`);const r=await o.arrayBuffer(),n=new Uint8Array(r);FS.createPath("/",a.USERDATA,!0,!0),FS.writeFile(a.ROM,n),console.log("rom loaded")}function h(e,t,o,r){var n=Math.min(o/e,r/t);return[e*n,t*n]}function f(e){return window.Module={canvas:e,noInitialRun:!0,onRuntimeInitialized:()=>{},arguments:["/rom.bin","--verbose"]},window.Module}class b{constructor(){this.canvas=document.getElementById("canvas"),this.container=document.getElementById("emulator-body"),this.module=f(this.canvas),window.addEventListener("resize",this.resize.bind(this),!1),u(window.top,{type:l.ready})}start(){this.module.callMain(window.Module.arguments),requestAnimationFrame(()=>{this.resize()})}restart(){window.location.href=window.location.href}async initializeCoreAndRom({core:t,rom:o}){await i(t),await s(o)}async loadCore(t){await i(t)}async loadRom(t){await s(t)}pause(){this.module.pauseMainLoop()}resume(){this.module.resumeMainLoop()}resize(){const{offsetWidth:t,offsetHeight:o}=this.container,{innerWidth:r,innerHeight:n}=window,[d,c]=h(t,o,r,n);this.module.setCanvasSize(d,c,!0)}focus(){console.log("blur"),requestAnimationFrame(()=>{window.blur(),window.focus()})}}const E=new b;m(E);window.parent.addEventListener("keydown",e=>{const t=new KeyboardEvent("keydown",e);document.dispatchEvent(t)});window.parent.addEventListener("keyup",e=>{const t=new KeyboardEvent("keyup",e);document.dispatchEvent(t)});
