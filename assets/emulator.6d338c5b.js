import{O as s,r as h}from"./emulatorMessageHandler.6ea88bd0.js";function d(e,t){e.postMessage(t,"*")}async function c(e){return new Promise(t=>{const r=document.getElementById("canvas"),o=document.createElement("script");o.src=`/retroid//cores/${e}_libretro.js`,o.onerror=n=>{alert(n)},o.onload=()=>(console.log("core loaded"),t()),r==null||r.appendChild(o)})}function m(e,t){return new Promise((r,o)=>{fetch(e,{method:"GET"}).then(n=>n.ok?r(n[t]()):o(`getFile -> Unable to fetch file at ${e}`))})}var a=(e=>(e.BUNDLE="home/web_user/retroarch/bundle",e.USERDATA="home/web_user/retroarch/userdata",e.CONFIG="/home/web_user/retroarch/userdata/retroarch.cfg",e.ROM="/rom.bin",e.STATE="/home/web_user/retroarch/userdata/states/rom.state",e.SCREENSHOT="/home/web_user/retroarch/userdata/screenshots/",e))(a||{});async function u(e){const t=`/retroid//roms/${e}`;let r=await m(t,"blob");if(!r)throw new Error(`loadRom ->  Unable to fetch rom at ${e}`);const o=await r.arrayBuffer(),n=new Uint8Array(o);FS.createPath("/",a.USERDATA,!0,!0),FS.writeFile(a.ROM,n),console.log("rom loaded")}function w(e,t){const{offsetWidth:r,offsetHeight:o}=e;if(!t)return[r,o];const{innerWidth:n,innerHeight:l}=window,i=Math.min(n/r,l/o);return[r*i,o*i]}function f(e){return window.Module={canvas:e,noInitialRun:!0,onRuntimeInitialized:()=>{},print:()=>{},printErr:()=>{},arguments:["/rom.bin","--verbose"]},window.Module}class p{constructor(){this.canvas=document.getElementById("canvas"),this.container=document.getElementById("canvas-container"),this.module=f(this.canvas),this.parent=window.top,this.ready=!1,this.started=!1,this.originalRatio=!0,d(this.parent,{type:s.initialized}),window.addEventListener("resize",this.resize.bind(this),!1)}start(){this.module.callMain(window.Module.arguments),requestAnimationFrame(()=>{this.resize()})}restart(){window.location.href=window.location.href}async initializeCoreAndRom({core:t,rom:r}){await c(t),await u(r),d(this.parent,{type:s.ready})}async loadCore(t){await c(t)}async loadRom(t){await u(t)}pause(){this.module.pauseMainLoop()}resume(){this.module.resumeMainLoop()}changeAspectRatio(){this.originalRatio=!this.originalRatio,this.resize()}resize(){const[t,r]=w(this.container,this.originalRatio);this.module.setCanvasSize(t,r,!1)}}const g=new p;h(g);window.parent.addEventListener("keydown",e=>{const t=new KeyboardEvent("keydown",e);document.dispatchEvent(t)});window.parent.addEventListener("keyup",e=>{const t=new KeyboardEvent("keyup",e);document.dispatchEvent(t)});
